name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: [8.2]

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, pdo, mysql
          ini-values: post_max_size=256M, upload_max_filesize=256M
          coverage: none

      - name: Install dependencies
        working-directory: lp_app
        run: composer install

      - name: Wait for MySQL
        run: |
          for i in {1..10}; do
            if mysqladmin ping -h 127.0.0.1 --silent; then
              echo "MySQL is ready!";
              break;
            fi
            echo "Waiting for MySQL...";
            sleep 5;
          done

      - name: Run migrations
        working-directory: lp_app
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: test_db
          DB_USERNAME: root
          DB_PASSWORD: root
        run: php artisan migrate --force

      - name: Run tests
        working-directory: lp_app
        run: php artisan test

  docker-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t myapp:latest .

      - name: Run Docker container
        run: |
          docker run -d --name myapp-container -p 8000:8000 myapp:latest
          sleep 10 # Attendre que le conteneur d√©marre

      - name: Run tests inside Docker
        run: |
          docker exec myapp-container php artisan test